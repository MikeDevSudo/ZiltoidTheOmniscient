{"version":3,"sources":["Components/Quiz/QuizQuestion.module.css","Pages/Quiz.module.css","Components/UI/Modal.module.css","Components/UI/Timer.module.css","Components/Quiz/QuizSettings.module.css","Components/Layout/Layout.module.css","Components/Layout/NavBar.module.css","Components/UI/Button.module.css","Components/UI/Card.module.css","Assets/Images/Outcome/Launch.png","Assets/Images/Outcome/CoffeeMug.png","Components/Quiz/EndScreen.module.css","Assets/Images/Progress/Progress-0.png","Assets/Images/Progress/Progress-1.png","Assets/Images/Progress/Progress-2.png","Assets/Images/Progress/Progress-3.png","Assets/Images/Progress/Progress-4.png","Assets/Images/Progress/Progress-5.png","Assets/Images/Progress/Progress-6.png","Assets/Images/Progress/Progress-7.png","Assets/Images/Progress/Progress-8.png","Assets/Images/Progress/Progress-lose.png","Assets/Images/Progress/Progress-win.png","Components/UI/Button.js","Components/UI/Card.js","Utilities/backgroundImagesUtils.js","Components/Quiz/QuizSettings.js","Components/UI/Timer.js","Components/Quiz/QuizQuestion.js","Components/UI/Modal.js","Components/Quiz/Instructions.js","Components/Quiz/EndScreen.js","Utilities/quizShuffle.js","Hooks/useQuizLogic.js","Hooks/useQuizSettings.js","Pages/Quiz.js","Components/Layout/NavBar.js","Components/Layout/Layout.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","button","selected","next","placeholder","questions","img","content","progressContainer","backgroundImageMobile","backdrop","modal","slide-down","contentModal","timerContainer","timerBar","timerText","AppContainer","main","NavBar","NavBarTitle","actions","card","__webpack_require__","p","endImg","Button","props","React","createElement","className","concat","classes","type","onClick","children","Card","progressImages","require","getBackgroundImageURL","currentQuestion","isWin","quizCompleted","quizStarted","length","QuizSettings","_ref","selectedDifficulty","onSettingsSelected","selectedAbilities","handleDifficultyChange","difficultyOptions","handleAbilityToggle","abilitiesOptions","Fragment","map","option","key","level","Timer","onTimerEnd","initialCountdownTime","getInitialCountdownTime","_useState","useState","_useState2","_slicedToArray","timer","setTimer","_useState3","_useState4","progress","setProgress","useEffect","interval","setInterval","prevTimer","clearInterval","style","width","QuizQuestion","question","options","onAnswerSelect","selectedOption","setSelectedOption","index","handleOptionClick","String","fromCharCode","handleSubmitAnswer","Backdrop","onClose","ModalOverlay","scrollable","portalElement","document","getElementById","Modal","ReactDOM","createPortal","Instructions","EndScreen","onRestart","correctAnswers","console","log","imgSrc","Coffee","Launch","winMessage","src","alt","shuffleArray","array","shuffledArray","_toConsumableArray","i","j","Math","floor","random","_ref2","useQuizLogic","questionsToWin","quizQuestions","setQuizQuestions","setCurrentQuestion","_useState5","_useState6","userAnswers","setUserAnswers","_useState7","_useState8","setQuizCompleted","_useState9","_useState10","quizRestart","setQuizRestart","_useState11","_useState12","showInstructions","setShowInstructions","_useState13","_useState14","setIsWin","_useState15","_useState16","setCorrectAnswers","shuffledQuestions","slice","shuffleQuestionsAndAnswers","QuizData","goToNextQuestion","correctCount","correctAnswer","calculateCorrectAnswers","handleAnswerSelect","undefined","handleQuizRestart","closeModalHandler","gameOver","useQuizSettings","setSelectedDifficulty","setSelectedAbilities","settingsSelected","setSettingsSelected","setQuestionsToWin","find","ability","prevAbilities","includes","filter","prevAbility","handleApplySettings","Quiz","isMobile","_useQuizSettings","_useQuizLogic","instructionsShown","setInstructionsShown","setQuizStarted","backgroundImage","Image","handleStartQuiz","resetQuiz","handleTimerEnd","showInstructionsOrSettings","Layout","App","setIsMobile","checkScreenSize","isMobileScreen","window","matchMedia","matches","addEventListener","removeEventListener","reportWebVitals","onPerfEntry","Function","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.ae90c89a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"QuizQuestion_button__3gy3h\",\"selected\":\"QuizQuestion_selected__3EynI\",\"next\":\"QuizQuestion_next__36zRy\",\"placeholder\":\"QuizQuestion_placeholder__3Ta-B\",\"questions\":\"QuizQuestion_questions__3oz1w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"Quiz_img__KGTmZ\",\"content\":\"Quiz_content__Dvbn3\",\"progressContainer\":\"Quiz_progressContainer__2PExX\",\"backgroundImageMobile\":\"Quiz_backgroundImageMobile__2Hxk3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Modal_backdrop__1Snom\",\"modal\":\"Modal_modal__2Rpcb\",\"slide-down\":\"Modal_slide-down__cL-O0\",\"contentModal\":\"Modal_contentModal__3PUsx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"timerContainer\":\"Timer_timerContainer__2asx7\",\"timerBar\":\"Timer_timerBar__23-gj\",\"timerText\":\"Timer_timerText__1Qo8z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selected\":\"QuizSettings_selected__2nEG-\",\"button\":\"QuizSettings_button__2_Hub\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AppContainer\":\"Layout_AppContainer__3Ngjo\",\"main\":\"Layout_main__15M94\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavBar\":\"NavBar_NavBar__XlyTL\",\"NavBarTitle\":\"NavBar_NavBarTitle__Vyi6a\",\"button\":\"NavBar_button__2T_uw\",\"actions\":\"NavBar_actions__3wusz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__3XnWI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__3dO0W\"};","module.exports = __webpack_public_path__ + \"static/media/Launch.1f6f9114.png\";","module.exports = __webpack_public_path__ + \"static/media/CoffeeMug.b0441182.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"endImg\":\"EndScreen_endImg__3DnMS\"};","module.exports = __webpack_public_path__ + \"static/media/Progress-0.97932d3a.png\";","module.exports = __webpack_public_path__ + \"static/media/Progress-1.daf9b52a.png\";","module.exports = __webpack_public_path__ + \"static/media/Progress-2.5671759c.png\";","module.exports = __webpack_public_path__ + \"static/media/Progress-3.d5d4fb7e.png\";","module.exports = __webpack_public_path__ + \"static/media/Progress-4.0070dc5e.png\";","module.exports = __webpack_public_path__ + \"static/media/Progress-5.ed0f809e.png\";","module.exports = __webpack_public_path__ + \"static/media/Progress-6.c9e5228c.png\";","module.exports = __webpack_public_path__ + \"static/media/Progress-7.223c74b5.png\";","module.exports = __webpack_public_path__ + \"static/media/Progress-8.f720592d.png\";","module.exports = __webpack_public_path__ + \"static/media/Progress-lose.e40a8590.png\";","module.exports = __webpack_public_path__ + \"static/media/Progress-win.b3c26c4b.png\";","import React from 'react';\r\n\r\nimport classes from './Button.module.css';\r\n\r\nconst Button = (props) => {\r\n  return (\r\n    <button\r\n      className={`${classes.button} ${props.className}`}\r\n      type={props.type || 'button'}\r\n      onClick={props.onClick}\r\n    >\r\n      {props.children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;","import React from 'react';\r\n\r\nimport classes from './Card.module.css';\r\n\r\nconst Card = (props) => {\r\n  return <div className={`${classes.card} ${props.className}`}>{props.children}</div>;\r\n};\r\n\r\nexport default Card;","// backgroundImagesUtils.js\r\n\r\n// Import all the progress images using require\r\nconst Progress0 = require(\"../Assets/Images/Progress/Progress-0.png\");\r\nconst Progress1 = require(\"../Assets/Images/Progress/Progress-1.png\");\r\nconst Progress2 = require(\"../Assets/Images/Progress/Progress-2.png\");\r\nconst Progress3 = require(\"../Assets/Images/Progress/Progress-3.png\");\r\nconst Progress4 = require(\"../Assets/Images/Progress/Progress-4.png\");\r\nconst Progress5 = require(\"../Assets/Images/Progress/Progress-5.png\");\r\nconst Progress6 = require(\"../Assets/Images/Progress/Progress-6.png\");\r\nconst Progress7 = require(\"../Assets/Images/Progress/Progress-7.png\");\r\nconst Progress8 = require(\"../Assets/Images/Progress/Progress-8.png\");\r\nconst ProgressLose = require(\"../Assets/Images/Progress/Progress-lose.png\");\r\nconst ProgressWin = require(\"../Assets/Images/Progress/Progress-win.png\");\r\n\r\nconst progressImages = [\r\n  Progress0,\r\n  Progress1,\r\n  Progress2,\r\n  Progress3,\r\n  Progress4,\r\n  Progress5,\r\n  Progress6,\r\n  Progress7,\r\n  Progress8,\r\n  ProgressLose,\r\n  ProgressWin,\r\n];\r\n\r\nexport const getBackgroundImageURL = (currentQuestion, isWin, quizCompleted, quizStarted) => {\r\n  if (quizCompleted) {\r\n    return isWin ? progressImages[10] : progressImages[9];\r\n  } else if (!quizStarted) {\r\n    return progressImages[0];\r\n  } else if (currentQuestion < progressImages.length - 1) {\r\n    return progressImages[currentQuestion + 1];\r\n  }\r\n};\r\n\r\nexport default progressImages;\r\n","import React from \"react\";\r\nimport Button from \"../UI/Button\";\r\nimport classes from \"./QuizSettings.module.css\";\r\n\r\nconst QuizSettings = ({ selectedDifficulty, selectedAbilities, onSettingsSelected, handleDifficultyChange, handleAbilityToggle, difficultyOptions,abilitiesOptions  }) => {\r\n\r\n\r\nconst settingsHandeler =() =>{\r\n  onSettingsSelected()\r\n}\r\n\r\n\r\n  return (\r\n    <>\r\n      <h2>Quiz Settings</h2>\r\n      <div>\r\n        <p>Select Difficulty:</p>\r\n        {difficultyOptions.map((option) => (\r\n          <Button\r\n            key={option.level}\r\n            onClick={() => handleDifficultyChange(option.level)}\r\n            className={selectedDifficulty === option.level ? classes.selected : null}\r\n          >\r\n            {option.level}\r\n          </Button>\r\n        ))}\r\n        <p>Difficulty affects Ziltoid's patience and tolerance</p>\r\n        <p>Less time and less mistakes!</p>\r\n\r\n      </div>\r\n\r\n      <Button onClick={settingsHandeler} className={classes.button}>Apply Settings</Button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default QuizSettings;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport classes from \"./Timer.module.css\";\r\n\r\nconst Timer = ({ selectedDifficulty, onTimerEnd }) => {\r\n  const getInitialCountdownTime = () => {\r\n    switch (selectedDifficulty) {\r\n      case \"easy\":\r\n        return 180;\r\n      case \"medium\":\r\n        return 120;\r\n      case \"hard\":\r\n        return 60;\r\n      default:\r\n        return 180;\r\n    }\r\n  };\r\n\r\n  const initialCountdownTime = getInitialCountdownTime();\r\n  const [timer, setTimer] = useState(initialCountdownTime);\r\n  const [progress, setProgress] = useState(100);\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setTimer((prevTimer) => prevTimer - 1);\r\n    }, 1000);\r\n\r\n    return () => {\r\n      clearInterval(interval);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (timer === 0) {\r\n      onTimerEnd();\r\n    }\r\n  }, [timer, onTimerEnd]);\r\n\r\n  useEffect(() => {\r\n    const ratio = 100 / initialCountdownTime;\r\n    const newProgress = timer * ratio;\r\n    setProgress(newProgress);\r\n  }, [timer, initialCountdownTime]);\r\n\r\n  return (\r\n    <div className={classes.timerContainer}>\r\n      <div className={classes.timerBar} style={{ width: `${progress}%` }}></div>\r\n      <div className={classes.timerText}>Ziltoid's patience</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Timer;\r\n","import React, { useState } from \"react\";\r\nimport Button from \"../UI/Button\";\r\nimport classes from \"./QuizQuestion.module.css\";\r\n\r\nconst QuizQuestion = ({ question, options, onAnswerSelect }) => {\r\n  const [selectedOption, setSelectedOption] = useState(null);\r\n\r\n  const handleOptionClick = (option) => {\r\n    setSelectedOption(option);\r\n  };\r\n\r\n  const handleSubmitAnswer = (selectedOption) => {\r\n    onAnswerSelect(selectedOption);\r\n    setSelectedOption(null);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <p className={classes.questions}>{question}</p>\r\n      <ul>\r\n        {options.map((option, index) => (\r\n          <li key={index}>\r\n            <Button\r\n              className={`${selectedOption === option ? classes.selected : \"\"} ${\r\n                classes.button\r\n              }`}\r\n              onClick={() => handleOptionClick(option)}\r\n            >\r\n              {String.fromCharCode(65 + index)}. {option}\r\n            </Button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      {selectedOption && (\r\n        <Button className={classes.next} onClick={() => handleSubmitAnswer(selectedOption)}>Next</Button>\r\n      )}\r\n      {!selectedOption && (\r\n        <div className={classes.placeholder}></div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default QuizQuestion;\r\n","import React, { Fragment } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport classes from './Modal.module.css';\n\nconst Backdrop = (props) => {\n  return <div className={classes.backdrop} onClick={props.onClose} />;\n};\n\nconst ModalOverlay = (props) => {\n  return (\n    <div className={classes.modal}>\n      <div className={`${classes.contentModal} ${classes.scrollable}`}>{props.children}</div>\n    </div>\n  );\n};\n\nconst portalElement = document.getElementById('overlays');\n\nconst Modal = (props) => {\n  return (\n    <Fragment>\n      {ReactDOM.createPortal(<Backdrop onClose={props.onClose} />, portalElement)}\n      {ReactDOM.createPortal(\n        <ModalOverlay>{props.children}</ModalOverlay>,\n        portalElement\n      )}\n    </Fragment>\n  );\n};\n\nexport default Modal;\n","import React from \"react\";\r\nimport Modal from \"../UI/Modal\";\r\nimport Button from \"../UI/Button\";\r\n\r\nconst Instructions = ({ onClose }) => {\r\n  const handleStartQuiz = () => {\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <Modal onClose={onClose}>\r\n      <h2>How to Play</h2>\r\n      <p>\r\n        Greetings, puny earthlings! Bow before the magnificence of Ziltoid the\r\n        Omniscient, ruler of the cosmos! I have prepared a trial, a cosmic test\r\n        of eight questions, to challenge your feeble minds.\r\n      </p>\r\n\r\n      <p>\r\n        Behold! Eight questions shall stand in your way, daring to separate you\r\n        from the unparalleled joy of savoring the divine nectar of the universe\r\n        - coffee! The very elixir that fuels my cosmic escapades across galaxies\r\n        and dimensions.\r\n      </p>\r\n      <p>\r\n        Dare to delve into the mystic lore of Ziltoid, and attempt to prove your\r\n        unworthy knowledge of the cosmos. Time is a fleeting concept, and the\r\n        clock ticks relentlessly! Commence this arduous quest now, and if, by\r\n        some astronomical miracle, you manage to answer correctly, I may grant\r\n        you passage beyond my fearsome missiles and extend the privilege of\r\n        joining me for a cup of celestial coffee.\r\n      </p>\r\n\r\n      <p>\r\n        Prepare yourselves, for the cosmic forces shall be your guide in this\r\n        daring endeavor!\r\n      </p>\r\n\r\n      <Button onClick={handleStartQuiz}>Next</Button>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default Instructions;\r\n","import React from \"react\";\r\nimport Modal from \"../UI/Modal\";\r\nimport Button from \"../UI/Button\";\r\nimport Launch from \"../../Assets/Images/Outcome/Launch.png\";\r\nimport Coffee from \"../../Assets/Images/Outcome/CoffeeMug.png\";\r\nimport classes from \"./EndScreen.module.css\"\r\n\r\nconst EndScreen = ({ onClose, onRestart, correctAnswers, isWin }) => {\r\n  console.log(\"correctAnswers\",correctAnswers)\r\n  console.log(\"isWin\",isWin)\r\n\r\n  const handleRestart = () => {\r\n    onRestart();\r\n    onClose(); \r\n  };\r\n\r\n  const imgSrc = isWin ? Coffee : Launch;\r\n  const winMessage = isWin ? \"Behold a cup of celestial coffee\" : \"Feeble attempt puny human. Better luck next time! If you survive\";\r\n\r\n  return (\r\n    <Modal onClose={onClose}>\r\n      <h2>You finished the Quiz!</h2>\r\n      <p>{correctAnswers} out of 8</p>\r\n      <img className= {classes.endImg} src={imgSrc} alt={winMessage} />\r\n      <p>{winMessage}</p>\r\n      <Button onClick={handleRestart}>Restart Quiz</Button>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default EndScreen;\r\n","export function shuffleQuestionsAndAnswers(questions) {\r\n    const shuffledQuestions = questions.slice();\r\n    for (let i = shuffledQuestions.length - 1; i > 0; i--) {\r\n      const j = Math.floor(Math.random() * (i + 1));\r\n      [shuffledQuestions[i], shuffledQuestions[j]] = [shuffledQuestions[j], shuffledQuestions[i]];\r\n  \r\n      shuffledQuestions[i].options = shuffleArray(shuffledQuestions[i].options);\r\n    }\r\n    return shuffledQuestions;\r\n  }\r\n  \r\n  function shuffleArray(array) {\r\n    const shuffledArray = [...array];\r\n    for (let i = shuffledArray.length - 1; i > 0; i--) {\r\n      const j = Math.floor(Math.random() * (i + 1));\r\n      [shuffledArray[i], shuffledArray[j]] = [shuffledArray[j], shuffledArray[i]];\r\n    }\r\n    return shuffledArray;\r\n  }\r\n  ","import { useState, useEffect } from \"react\";\r\nimport QuizData from \"../Data/QuizQuestions/QuizQuestions.json\";\r\nimport { shuffleQuestionsAndAnswers } from \"../Utilities/quizShuffle\";\r\n\r\nconst useQuizLogic = (questionsToWin) => {\r\n  const [quizQuestions, setQuizQuestions] = useState([]);\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [userAnswers, setUserAnswers] = useState([]);\r\n  const [quizCompleted, setQuizCompleted] = useState(false);\r\n  const [quizRestart, setQuizRestart] = useState(false);\r\n  const [showInstructions, setShowInstructions] = useState(true);\r\n  const [isWin, setIsWin] = useState(false);\r\n  const [correctAnswers, setCorrectAnswers] = useState(0);\r\n\r\n  useEffect(() => {\r\n    setQuizQuestions(shuffleQuestionsAndAnswers(QuizData.questions));\r\n    setShowInstructions(true);\r\n  }, [quizRestart]);\r\n\r\n  const handleAnswerSelect = (selectedOption) => {\r\n    if (selectedOption !== null && selectedOption !== undefined && selectedOption !== \"\") {\r\n      setUserAnswers([...userAnswers, selectedOption]);\r\n      goToNextQuestion();\r\n    }\r\n  };\r\n\r\n  const goToNextQuestion = () => {\r\n    if (currentQuestion < quizQuestions.length - 1) {\r\n      setCurrentQuestion(currentQuestion + 1);\r\n    } else {\r\n      setQuizCompleted(true);\r\n    }\r\n  };\r\n\r\n  const calculateCorrectAnswers = () => {\r\n    let correctCount = 0;\r\n    for (let i = 0; i < quizQuestions.length; i++) {\r\n      if (userAnswers[i] === quizQuestions[i].correctAnswer) {\r\n        correctCount++;\r\n      }\r\n    }\r\n    return correctCount;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (quizCompleted) {\r\n      const correctCount = calculateCorrectAnswers();\r\n      setCorrectAnswers(correctCount);\r\n      setIsWin(correctCount >= questionsToWin);\r\n    }\r\n  }, [quizCompleted, questionsToWin]);\r\n\r\n  const handleQuizRestart = () => {\r\n    setCurrentQuestion(0);\r\n    setUserAnswers([]);\r\n    setQuizCompleted(false);\r\n    setQuizRestart(!quizRestart);\r\n    setIsWin(false);\r\n  };\r\n\r\n  const closeModalHandler = () => {\r\n    setShowInstructions(false);\r\n  };\r\n\r\n  const gameOver = () => {\r\n    setQuizCompleted(true);\r\n    setIsWin(false);\r\n  };\r\n\r\n  return {\r\n    quizQuestions,\r\n    currentQuestion,\r\n    userAnswers,\r\n    quizCompleted,\r\n    quizRestart,\r\n    showInstructions,\r\n    correctAnswers,\r\n    isWin,\r\n    handleAnswerSelect,\r\n    handleQuizRestart,\r\n    closeModalHandler,\r\n    gameOver,\r\n  };\r\n};\r\n\r\nexport default useQuizLogic;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nconst useQuizSettings = () => {\r\n  const [selectedDifficulty, setSelectedDifficulty] = useState(\"\");\r\n  const [selectedAbilities, setSelectedAbilities] = useState([]);\r\n  const [settingsSelected, setSettingsSelected] = useState(false);\r\n  const [questionsToWin, setQuestionsToWin] = useState(5);\r\n\r\n  useEffect(() => {\r\n    console.log(\"settingsSelected updated useEffect:\", settingsSelected);\r\n    console.log(\"selectedDifficulty updated useEffect:\", selectedDifficulty);\r\n    console.log(\"selectedAbilities updated useEffect:\", selectedAbilities);\r\n    console.log(\"questionsToWin updated useEffect:\", questionsToWin);\r\n  }, [settingsSelected, selectedDifficulty, selectedAbilities, questionsToWin]);\r\n\r\n  const difficultyOptions = [\r\n    { level: \"easy\", questionsToWin: 5 },\r\n    { level: \"medium\", questionsToWin: 6 },\r\n    { level: \"hard\", questionsToWin: 7 },\r\n  ];\r\n\r\n  const handleDifficultyChange = (selectedDifficulty) => {\r\n    setSelectedDifficulty(selectedDifficulty);\r\n    const selectedOption = difficultyOptions.find(\r\n      (option) => option.level === selectedDifficulty\r\n    );\r\n    setQuestionsToWin(selectedOption ? selectedOption.questionsToWin : 5);\r\n  };\r\n\r\n  const handleAbilityToggle = (ability) => {\r\n    setSelectedAbilities((prevAbilities) =>\r\n      prevAbilities.includes(ability)\r\n        ? prevAbilities.filter((prevAbility) => prevAbility !== ability)\r\n        : [...prevAbilities, ability]\r\n    );\r\n    console.log(\"handleAbilityToggle\", ability);\r\n  };\r\n\r\n  const handleApplySettings = () => {\r\n    setSettingsSelected(true);\r\n  };\r\n\r\n  return {\r\n    selectedDifficulty,\r\n    selectedAbilities,\r\n    settingsSelected,\r\n    questionsToWin,\r\n    handleDifficultyChange,\r\n    handleAbilityToggle,\r\n    handleApplySettings,\r\n  };\r\n};\r\n\r\nexport default useQuizSettings;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Button from \"../Components/UI/Button\";\r\nimport Card from \"../Components/UI/Card\";\r\nimport classes from \"./Quiz.module.css\";\r\nimport { getBackgroundImageURL } from \"../Utilities/backgroundImagesUtils\";\r\nimport QuizSettings from \"../Components/Quiz/QuizSettings\";\r\nimport Timer from \"../Components/UI/Timer\";\r\nimport QuizQuestion from \"../Components/Quiz/QuizQuestion\";\r\nimport Instructions from \"../Components/Quiz/Instructions\";\r\nimport EndScreen from \"../Components/Quiz/EndScreen\";\r\nimport useQuizLogic from \"../Hooks/useQuizLogic\";\r\nimport useQuizSettings from \"../Hooks/useQuizSettings\";\r\n\r\nconst Quiz = ({ isMobile }) => {\r\n  const {\r\n    selectedDifficulty,\r\n    selectedAbilities,\r\n    settingsSelected,\r\n    questionsToWin,\r\n    handleDifficultyChange,\r\n    handleAbilityToggle,\r\n    handleApplySettings,\r\n  } = useQuizSettings();\r\n\r\n  const difficultyOptions = [\r\n    { level: \"easy\", questionsToWin: 5 },\r\n    { level: \"medium\", questionsToWin: 6 },\r\n    { level: \"hard\", questionsToWin: 7 },\r\n  ];\r\n\r\n  const abilitiesOptions = [\"Ability 1\", \"Ability 2\", \"Ability 3\", \"Ability 4\"];\r\n\r\n  const {\r\n    quizQuestions,\r\n    currentQuestion,\r\n    quizCompleted,\r\n    correctAnswers,\r\n    isWin,\r\n    handleAnswerSelect,\r\n    handleQuizRestart,\r\n    closeModalHandler,\r\n    gameOver,\r\n  } = useQuizLogic(questionsToWin);\r\n\r\n  const [instructionsShown, setInstructionsShown] = useState(false);\r\n  const [quizStarted, setQuizStarted] = useState(false);\r\n  const backgroundImage = getBackgroundImageURL(\r\n    currentQuestion,\r\n    isWin,\r\n    quizCompleted,\r\n    quizStarted\r\n  );\r\n\r\n  useEffect(() => {\r\n    const nextImage = new Image();\r\n    nextImage.src = getBackgroundImageURL(\r\n      currentQuestion + 1,\r\n      isWin,\r\n      quizCompleted,\r\n      quizStarted\r\n    );\r\n  }, [currentQuestion, isWin, quizCompleted, quizStarted]);\r\n\r\n  const handleStartQuiz = () => {\r\n    setQuizStarted(true);\r\n  };\r\n\r\n  const resetQuiz = () => {\r\n    setInstructionsShown(false);\r\n    setQuizStarted(false);\r\n  };\r\n\r\n  const handleTimerEnd = () => {\r\n    gameOver();\r\n  };\r\n\r\n  const showInstructionsOrSettings = () => {\r\n    if (quizStarted) return null;\r\n\r\n    if (!instructionsShown) {\r\n      return <Instructions onClose={() => setInstructionsShown(true)} />;\r\n    }\r\n\r\n    if (!settingsSelected) {\r\n      return (\r\n        <QuizSettings\r\n          selectedDifficulty={selectedDifficulty}\r\n          selectedAbilities={selectedAbilities}\r\n          questionsToWin={questionsToWin}\r\n          onSettingsSelected={handleApplySettings}\r\n          handleDifficultyChange={handleDifficultyChange}\r\n          handleAbilityToggle={handleAbilityToggle}\r\n          difficultyOptions={difficultyOptions}\r\n          abilitiesOptions={abilitiesOptions}\r\n        />\r\n      );\r\n    }\r\n\r\n    return null;\r\n  };\r\n  console.log(\"isMobile\", isMobile);\r\n  return (\r\n    <React.Fragment>\r\n      {!isMobile && (\r\n        <div\r\n          className={classes.progressContainer}\r\n          style={{ backgroundImage: `url(${backgroundImage})` }}\r\n        >\r\n          <Card className={`${classes.content}`}>\r\n            {showInstructionsOrSettings()}\r\n\r\n            {settingsSelected && quizStarted && (\r\n              <>\r\n                <h2>Question {currentQuestion + 1}</h2>\r\n                <Timer\r\n                  selectedDifficulty={selectedDifficulty}\r\n                  onTimerEnd={handleTimerEnd}\r\n                />\r\n                {quizQuestions[currentQuestion] && (\r\n                  <QuizQuestion\r\n                    question={quizQuestions[currentQuestion].question}\r\n                    options={quizQuestions[currentQuestion].options}\r\n                    onAnswerSelect={handleAnswerSelect}\r\n                  />\r\n                )}\r\n              </>\r\n            )}\r\n\r\n            {quizCompleted && (\r\n              <EndScreen\r\n                onClose={closeModalHandler}\r\n                onRestart={() => {\r\n                  handleQuizRestart();\r\n                  resetQuiz();\r\n                }}\r\n                correctAnswers={correctAnswers}\r\n                isWin={isWin}\r\n              />\r\n            )}\r\n          </Card>\r\n          {!quizStarted && settingsSelected && (\r\n            <Button onClick={handleStartQuiz}>Start Quiz</Button>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      {isMobile && (\r\n        <div className={`${classes.content}`}>\r\n          {showInstructionsOrSettings()}\r\n\r\n          {settingsSelected && quizStarted && (\r\n            <>\r\n              <h2>Question {currentQuestion + 1}</h2>\r\n              <Timer\r\n                selectedDifficulty={selectedDifficulty}\r\n                onTimerEnd={handleTimerEnd}\r\n              />\r\n              {quizQuestions[currentQuestion] && (\r\n                <>\r\n                  <QuizQuestion\r\n                    question={quizQuestions[currentQuestion].question}\r\n                    options={quizQuestions[currentQuestion].options}\r\n                    onAnswerSelect={handleAnswerSelect}\r\n                  />\r\n                    <img\r\n                      src={backgroundImage}\r\n                      alt=\"Background\"\r\n                      className={classes.backgroundImageMobile}\r\n                    />\r\n                \r\n                </>\r\n              )}\r\n            </>\r\n          )}\r\n\r\n          {!quizStarted && settingsSelected && (\r\n            <Button onClick={handleStartQuiz}>Start Quiz</Button>\r\n          )}\r\n\r\n          {quizCompleted && (\r\n            <EndScreen\r\n              onClose={closeModalHandler}\r\n              onRestart={() => {\r\n                handleQuizRestart();\r\n                resetQuiz();\r\n              }}\r\n              correctAnswers={correctAnswers}\r\n              isWin={isWin}\r\n            />\r\n          )}\r\n        </div>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Quiz;\r\n","import React from 'react';\r\nimport classes from \"./NavBar.module.css\";\r\n\r\nconst NavBar = () => {\r\n\r\n \r\n  return (\r\n    <>\r\n      <header className={classes.NavBar}>\r\n        <div className={classes.NavBarTitle}>\r\n          <h1>Ziltoid The Omniscient</h1>\r\n        </div>\r\n      </header>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from 'react';\nimport classes from './Layout.module.css';\nimport NavBar from './NavBar';\n\nconst Layout = (props) => {\n  return (\n    <div className={classes.AppContainer}>\n      <NavBar />\n      <main className={classes.main}>{props.children}</main>\n      </div>\n  );\n};\n\nexport default Layout;\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Quiz from \"./Pages/Quiz\";\nimport Layout from \"./Components/Layout/Layout\";\n\nfunction App() {\n  const [isMobile, setIsMobile] = useState(false);\n\n  const checkScreenSize = () => {\n    const isMobileScreen = window.matchMedia(\"(min-width: 360px) and (max-width: 480px)\").matches;\n    setIsMobile(isMobileScreen);\n  };\n\n  useEffect(() => {\n    checkScreenSize();\n    window.addEventListener(\"resize\", checkScreenSize);\n    return () => {\n      window.removeEventListener(\"resize\", checkScreenSize);\n    };\n  }, []);\n\n  return (\n    <Layout>\n        <Quiz  isMobile={isMobile}/>\n    </Layout>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\nreportWebVitals();\n"],"sourceRoot":""}